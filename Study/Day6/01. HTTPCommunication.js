// ✏️ HTTP 통신
// - 웹 브라우저에서는 서버에 있는 텍스트나 이미지 등 여러가지 자료를 가져올 때 HTTP라는 프로토콜(통신 규약)을 통해 자료를 주고 받는다. (이것을 'HTTP 통신'이라고 한다.)

// 1️⃣ HTTP란?
// - 프로토콜(Protocol) : 클라이언트와 서버 간에 자료를 주고 받을 때 필요한 약속된 규칙
// - 웹에서는 HTTP(HyperText Transfer Protocol) 프로토콜을 사용한다.
// - 클라이언트에서 서버로 자료 요청을 하는 것은 'HTTP 요청(Request)', 서버에서 응답해서 클라이언트로 자료를 보내는 것은 'HTTP 응답(Response)'라고 한다.
// - 예) https://www.google.com (https -> 현재 문서의 프로토콜, HTTP 프로토콜보다 보안이 더 강화된 프로토콜)

// 2️⃣ 요청 헤더와 응답 헤더
// - 클라이언트(웹 브라우저)에서 사이트 주소를 입력하고 [Enter]를 누르면 서버로 HTTP 요청을 보낸다.
// -> 사이트 주소 뿐만 아니라, 사용 중인 시스템 정보와 웹 브라우저 정보, 사용한 언어 등 다른 정보까지 함께 전송된다.
// -> 이 정보는 헤더(Header) 형태로 전송된다. (요청할 때 보내는 헤더를 '요청 헤더(Request Header)'라고 한다.)
// - 서버에서 입력한 사이트를 찾아서 다시 클라이언트로 보내는 경우도 마찬가지이다.
// -> 응답 메시지를 보내는 시간, 메시지를 클라이언트에 어떻게 표시할지 등의 정보는 '응답 헤더(Response Header)'에 담기고, 이미지나 텍스트 같은 실제 사이트 내용은 '응답 본문(Response Body)'에 담겨서 전달된다.

// 3️⃣ 요청 방식 : GET, POST
// (1) GET
// - 서버에 자료를 요청할 때 사이트 주소의 뒤에 자료를 붙여서 보내는 방식
// - 웹 브라우저 창의 주소 표시줄에 요청 메시지가 함께 표시되고, 요청 본문은 따로 사용하지 않는다.
// - 서버로 사이트 주소를 보내면서 요청 자료도 함께 공개되므로, 요청 자료가 무엇인지 공개되어도 문제가 없을 경우에 사용

// (2) POST
// - 서버에 자료를 보낼 때 요청하는 방식
// - 예) 회원 가입 폼이나 로그인 폼에서 중요한 자료를 입력하고 서버로 보낼 때 사용
// - 요청 내용이 겉으로 드러나지 않고 요청 본문(Request Body)에 따로 담겨서 전송된다.

// 4️⃣ 응답 상태
// - 서버에서 클라이언트로 자료를 보낼 때도 응답 헤더와 본문이 함께 전송된다.
// - 응답 헤더 중, '상태' 컬럼에는 다양한 숫자가 표시되어 있다.
// -> 클라이언트에서 서버로 요청한 자료가 성공적으로 처리되었는지, 또는 요청한 파일이 없어서 실패했는지 등의 응답 상태를 숫자로 표시
// - 응답 상태의 주요 코드로는 200, 202, 400, 401, 500, 503 등이 있다.
// - 참고 : https://developer.mozilla.org/ko/docs/Web/HTTP/Status
