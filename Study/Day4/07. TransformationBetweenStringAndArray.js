// ✏️ 문자열과 배열 변환하기
// - 문자열은 그 안의 문자만 따로 수정하는 메서드가 없다.
// -> 그래서 문자열의 내용을 역순으로 또는 알파벳 순으로 배치하려면 문자열에 있는 문자를 따로 분리해서 배열 형태로 저장한 후 처리해야 한다.

// 1️⃣ 문자열을 문자 배열로 변환하기 : 전개 연산자, Array.form()
// - 배열에는 사용할 수 있는 메서드가 아주 많기 때문에, 문자열을 다룰 경우 배열로 변환 후 배열 메서드를 사용하고 결과 배열을 그대로 사용하거나 다시 문자열로 변환한다.

// (1) split()
str5 = "Hello, everyone";
array2 = str5.split(""); // ['H', 'e', 'l', 'l', 'o', ',', ' ', 'e', 'v', 'e', 'r', 'y', 'o', 'n', 'e']

// (2) 전개 연산자
// - ECMAScript 2015(ES6)부터 도입된 전개 연산자(...)를 사용하면 더욱 편리하게 문자열을 배열로 만들 수 있다.
array3 = [...str5]; // ['H', 'e', 'l', 'l', 'o', ',', ' ', 'e', 'v', 'e', 'r', 'y', 'o', 'n', 'e']

// (3) Array.form()
// - ECMAScript 2015(ES6)부터 사용 가능
// Array.form(문자열)
array4 = Array.from(str5); // ['H', 'e', 'l', 'l', 'o', ',', ' ', 'e', 'v', 'e', 'r', 'y', 'o', 'n', 'e']

// 2️⃣ 문자열 배열을 다시 문자열로 변환하기 : join()
// - 문자를 배열로 변환해서 작업하면 결과값은 배열로 반환된다.
// - 배열을 다시 문자열로 바꾸려면 Array 객체의 join() 메서드를 사용한다.
// - join() 메서드는 배열에 있는 모든 요소를 연결해서 하나의 문자열로 변환한다.
// 배열.join(구분자)
str6 = array4.join(""); // "Hello, everyone" (구분자를 따로 사용하지 않았으므로 배열에 있는 각 문자를 계속 연결해서 하나의 문자열을 만든다.)
